<?xml version="1.0"?>
<project name="quarknet" default="build" basedir=".">
    <description>
        Build file for the Quarknet Java source.

        Includes the task of generating database schemas and mapping files for Hibernate.
    </description>
    <property name="src" value="."/>

    <property name="src.dir" value="."/>

    <!-- tomcat root directory -->
    <property name="tomcat" value="/export/d1/quarknet/tomcat"/>

    <!-- libs from the common server library directory -->
    <property name="common_lib" value="${tomcat}/common/lib"/>

    <!-- libs specific to the quarknet web app -->
    <property name="quarknet_lib" value="${tomcat}/webapps/elab/WEB-INF/lib"/>
    
    <!-- places to put the compiled files and jars. -->
    <property name="build" value="build"/>
    <property name="dist" value="dist"/>

	<!-- here we have generated files (e.g hibernate mappings) -->
	<property name="gen.files.dir" value="gen-files"/>

	<!-- location of the hibernate mapping files -->
	<property name="hbm.dir" value="${gen.files.dir}/hbm"/>

    <!-- the lib.dir contains libraries -->
    <property name="lib.dir" value="${quarknet_lib}"/>

	<!-- where resources (e.g. log4j, properties, i18n ) files are located -->
    <property name="res.dir" value="${tomcat}/webapps/elab/WEB-INF/hibernate/etc"/>

    <path id="big_classpath">
		<!-- include the hibernate.properties -->	 
		<pathelement location="${res.dir}/"/>

        <fileset dir="${common_lib}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${quarknet_lib}">
            <include name="*.jar"/>
            <exclude name="*elab*"/>
        </fileset>
        <!-- include all jar files located in the projects hibernate/xdoclet lib directory -->     		
    	<fileset dir="${lib.dir}">
        	<include name="**/*.jar"/>
    	</fileset>  		
        <pathelement path="${build}"/>
		<!-- include the hbm files -->	
		<pathelement location="${gen.files.dir}/hbm"/>
    </path>
    
    <target name="init">
        <tstamp/>
        <mkdir dir="${build}"/>
		<mkdir dir="${gen.files.dir}"/>
		<mkdir dir="${hbm.dir}"/>
    </target>

    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
		<delete includeEmptyDirs="true">
			<fileset dir="${gen.files.dir}"
				includes="**/*"
			/>		
  		</delete>
  		<antcall target="init"/>
    </target>

    <target name="build" depends="init" description="Build QuarkNet source tree.">
        <javac srcdir="${src}" destdir="${build}" debug="true">
            <classpath refid="big_classpath"/>
        </javac>
    </target>

    <target name="build-clean" depends="clean,init" description="Build QuarkNet source tree.">
        <javac srcdir="${src}" destdir="${build}" debug="true">
            <classpath refid="big_classpath"/>
        </javac>
    </target>

    <target name="test-lifetime" depends="build" description="Test the lifetime scripts.">
        <property name="echo.classpath" refid="big_classpath"/>
        <echo message="${echo.classpath}"/>
        <java classname="RunLifetimeBean" fork="true" dir="${build}" classpathref="big_classpath"/>
    </target>

    <target name="test-userdb" depends="build,generate-hbm,schemaexport" description="Test the new user db.">
        <java classname="gov.fnal.elab.db.DemoUserDB" fork="true" dir="${build}" classpathref="big_classpath"/>
    </target>

    <target name="dist" depends="build" description="Build and jar the files.">
        <mkdir dir="${dist}"/>
        <jar jarfile="${dist}/elab-${DSTAMP}.jar" basedir="${build}"/>
    </target>

    <target name="tags">
        <exec executable="/home/egilbert/ctags-5.5.4/ctags">
            <arg line="--recurse=yes"/>
            <arg line="--links=yes"/>
            <arg line="--totals=yes"/>
            <arg line="-f /home/egilbert/.tags"/>
        </exec>
    </target>
    
    <!-- ************************************************************** -->
    <!-- Hibernate and xDoclet targets -->
    <!-- ************************************************************** -->
	<target name="generate-hbm" 
		description="Generates Hibernate class descriptor files."
        depends="build">
	    <!-- Define the hibernatedoclet task -->
	    <taskdef name="hibernatedoclet"
	        classname="xdoclet.modules.hibernate.HibernateDocletTask"
            classpathref="big_classpath">
	    </taskdef>    

	    <!-- Execute the hibernatedoclet task -->
	    <hibernatedoclet
	        destdir="${hbm.dir}"
	        excludedtags="@version,@author,@todo"
	        force="true"
	        verbose="true">
	        <fileset dir="${src.dir}">
                <include name="gov/fnal/elab/db/*.java"/>
                <include name="gov/fnal/elab/cosmic/db/*.java"/>
	        </fileset>
	        <!-- hibernate 1 and hibernate 2 mapping files are not fully compatible-->
	        <hibernate version="2.0"/>
	    </hibernatedoclet>
	</target>

	<!-- exports all the hbm mappings to the Postgres database -->
	<target name="schemaexport" depends="" description="Exports all hbm.xml files in {res.dir}/hbm">
	    <echo message="Run the schema export for all hbm.xml files in ${gen.files.dir}/hbm"/>
		<taskdef
			name="schemaexport"
			classname="net.sf.hibernate.tool.hbm2ddl.SchemaExportTask"
			classpathref="big_classpath"
			>
		</taskdef>
		<schemaexport
			properties="${res.dir}/hibernate.properties"
			quiet="no"
			text="no"
			drop="no"
			output="${gen.files.dir}/schema-export.sql">
			<fileset dir="${gen.files.dir}">
				<include name="**/*.hbm.xml"/>
			</fileset>
		</schemaexport>	
	</target>
</project>
